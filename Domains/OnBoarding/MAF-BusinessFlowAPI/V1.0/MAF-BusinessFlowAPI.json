openapi: 3.0.2
info:
    title: MAF-BusinessFlowAPI
    version: 1.0.0
    description: >-
        MAF : Modyo API Framework

        Business Flow Operations:


        This API allows to create the Meta-information of Process Flows that will be associated with the
        information generated by the definition of data of the same, that is, it allows to store the necessary
        information to manage business flows.
    contact:
        url: 'https://developer.modyo.com'
    license:
        name: Apache 2.0
        url: 'https://www.apache.org/licenses/LICENSE-2.0'
servers:
    -
        url: 'http://localhost:8080/maf'
        description: ''
paths:
    /businessflows:
        summary: Path used to manage the list of businessflows.
        description: >-
            The REST endpoint/path used to list and create zero or more `businessFlow` entities.  This path
            contains a `GET` and `POST` operation to perform the list and create tasks, respectively.
        get:
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/businessFlow'
                    description: Successful response - returns an array of `businessFlow` entities.
            operationId: getbusinessflows
            summary: List All businessflows
            description: Gets a list of all `businessFlow` entities.
        post:
            requestBody:
                description: A new `businessFlow` to be created.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/businessFlow'
                required: true
            responses:
                '201':
                    description: Successful response.
            operationId: createbusinessFlow
            summary: Create a businessFlow
            description: Creates a new instance of a `businessFlow`.
    '/businessflows/{businessflowId}':
        summary: Path used to manage a single businessFlow.
        description: >-
            The REST endpoint/path used to get, update, and delete single instances of an `businessFlow`. 
            This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and
            delete tasks, respectively.
        get:
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/businessFlow'
                    description: Successful response - returns a single `businessFlow`.
            operationId: getbusinessFlow
            summary: Get a businessFlow
            description: Gets the details of a single instance of a `businessFlow`.
        put:
            requestBody:
                description: Updated `businessFlow` information.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/businessFlow'
                required: true
            responses:
                '202':
                    description: Successful response.
            operationId: updatebusinessFlow
            summary: Update a businessFlow
            description: Updates an existing `businessFlow`.
        delete:
            responses:
                '204':
                    description: Successful response.
            operationId: deletebusinessFlow
            summary: Delete a businessFlow
            description: Deletes an existing `businessFlow`.
        parameters:
            -
                name: businessflowId
                description: A unique identifier for a `businessFlow`.
                schema:
                    type: string
                in: path
                required: true
    /flowinfos:
        summary: Path used to manage the list of flowinfos.
        description: >-
            The REST endpoint/path used to list and create zero or more `flowInfo` entities.  This path
            contains a `GET` and `POST` operation to perform the list and create tasks, respectively.
        get:
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/flowInfo'
                    description: Successful response - returns an array of `flowInfo` entities.
            operationId: getflowinfos
            summary: List All flowinfos
            description: Gets a list of all `flowInfo` entities.
        post:
            requestBody:
                description: A new `flowInfo` to be created.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/flowInfo'
                required: true
            responses:
                '201':
                    description: Successful response.
            operationId: createflowInfo
            summary: Create a flowInfo
            description: Creates a new instance of a `flowInfo`.
    '/flowinfos/{flowinfoId}':
        summary: Path used to manage a single flowInfo.
        description: >-
            The REST endpoint/path used to get, update, and delete single instances of an `flowInfo`.  This
            path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete
            tasks, respectively.
        get:
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/flowInfo'
                    description: Successful response - returns a single `flowInfo`.
            operationId: getflowInfo
            summary: Get a flowInfo
            description: Gets the details of a single instance of a `flowInfo`.
        put:
            requestBody:
                description: Updated `flowInfo` information.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/flowInfo'
                required: true
            responses:
                '202':
                    description: Successful response.
            operationId: updateflowInfo
            summary: Update a flowInfo
            description: Updates an existing `flowInfo`.
        delete:
            responses:
                '204':
                    description: Successful response.
            operationId: deleteflowInfo
            summary: Delete a flowInfo
            description: Deletes an existing `flowInfo`.
        parameters:
            -
                name: flowinfoId
                description: A unique identifier for a `flowInfo`.
                schema:
                    type: string
                in: path
                required: true
components:
    schemas:
        businessFlow:
            title: Root Type for businessFlow
            description: Data structure that allows you to configure the attributes of a business flow.
            type: object
            properties:
                businessFlow:
                    type: object
                    properties:
                        flow:
                            type: object
                            properties:
                                flowIdentifier:
                                    type: object
                                    properties:
                                        key:
                                            type: string
                                        value:
                                            type: string
                                id:
                                    type: string
                                name:
                                    type: string
                        flowData:
                            type: object
                            properties:
                                businessDataName:
                                    type: string
                                id:
                                    type: string
                                dataField:
                                    type: array
                                    items:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                            type:
                                                type: string
                                            value:
                                                type: string
            example:
                businessFlow:
                    flow:
                        flowIdentifier:
                            key: userMail
                            value: john.smith@mail.com
                        id: bf-001
                        name: OnBoarding
                    flowData:
                        businessDataName: PersonalData
                        id: bd-001
                        dataField:
                            -
                                name: firstName
                                type: String
                                value: John
                            -
                                name: lastName
                                type: String
                                value: Smith
                            -
                                name: mail
                                type: String
                                value: john.smith@mail.com
        flowInfo:
            title: Root Type for flowInfo
            description: Get status OnBoarding Info.
            type: object
            properties:
                flowInfo:
                    type: object
                    properties:
                        id:
                            type: string
                        id-type:
                            type: string
                        dataField:
                            type: array
                            items:
                                type: object
                                properties:
                                    name:
                                        type: string
                                    type:
                                        type: string
                                    value:
                                        type: string
            example:
                flowInfo:
                    id: john.smith@mail.com
                    id-type: userMail
                    dataField:
                        -
                            name: OnBoard-Status-code
                            type: Numeric
                            value: '0'
                        -
                            name: OnBoard-Status-desc
                            type: String
                            value: Credentials level Onboarding
                        -
                            name: OnBoard-DateCreated
                            type: Date
                            value: '2020-01-23T18:25:43.511Z'
