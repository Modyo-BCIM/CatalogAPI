{
    "openapi": "3.0.2",
    "info": {
        "title": "MAF-OnBoardingFlowAPI",
        "version": "1.0.0",
        "description": "This API allows to create the Meta-information of Process Flows that will be associated with the information generated by the definition of data of the same, that is, it allows to store the necessary information to manage business flows.",
        "contact": {
            "name": "Ricardo Paredes",
            "url": "https://www.modyo.com/",
            "email": "rparedes@modyo.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0"
        }
    },
    "servers": [
        {
            "url": "https://{domain}:{port}/bci-m/services/accounts/onboarding",
            "description": "BCI Miami Services Layer",
            "variables": {
                "domain": {
                    "default": "localhost",
                    "description": "server domain"
                },
                "port": {
                    "default": "443",
                    "description": "Server Port"
                }
            }
        }
    ],
    "paths": {
        "/flowinfos": {
            "summary": "Path used to manage the list of flowinfos.",
            "description": "The REST endpoint/path used to list and create zero or more `flowInfo` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/flowInfo"
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `flowInfo` entities."
                    }
                },
                "operationId": "getflowinfos",
                "summary": "List All flowinfos",
                "description": "Gets a list of all `flowInfo` entities."
            },
            "post": {
                "requestBody": {
                    "description": "A new `flowInfo` to be created.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/flowInfo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful response."
                    }
                },
                "operationId": "createflowInfo",
                "summary": "Create a flowInfo",
                "description": "Creates a new instance of a `flowInfo`."
            }
        },
        "/flowinfos/{flowinfoId}": {
            "summary": "Path used to manage a single flowInfo.",
            "description": "The REST endpoint/path used to get, update, and delete single instances of an `flowInfo`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/flowInfo"
                                }
                            }
                        },
                        "description": "Successful response - returns a single `flowInfo`."
                    }
                },
                "operationId": "getflowInfo",
                "summary": "Get a flowInfo",
                "description": "Gets the details of a single instance of a `flowInfo`."
            },
            "put": {
                "requestBody": {
                    "description": "Updated `flowInfo` information.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/flowInfo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful response."
                    }
                },
                "operationId": "updateflowInfo",
                "summary": "Update a flowInfo",
                "description": "Updates an existing `flowInfo`."
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Successful response."
                    }
                },
                "operationId": "deleteflowInfo",
                "summary": "Delete a flowInfo",
                "description": "Deletes an existing `flowInfo`."
            },
            "parameters": [
                {
                    "name": "flowinfoId",
                    "description": "A unique identifier for a `flowInfo`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "flowInfo": {
                "title": "Root Type for flowInfo",
                "description": "This Resource Contain the FRontEnd data ",
                "type": "object",
                "properties": {
                    "businessFlow": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "flow": {
                                "type": "object",
                                "properties": {
                                    "flowIdentifier": {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            },
                            "flowData": {
                                "type": "object",
                                "properties": {
                                    "businessDataName": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "dataField": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "example": {
                    "businessFlow": {
                        "id": "john.smith@mail.com",
                        "flow": {
                            "flowIdentifier": {
                                "key": "userMail",
                                "value": "john.smith@mail.com"
                            },
                            "id": "bf-001",
                            "name": "OnBoarding"
                        },
                        "flowData": {
                            "businessDataName": "PersonalData",
                            "id": "bd-001",
                            "dataField": [
                                {
                                    "name": "firstName",
                                    "type": "String",
                                    "value": "John"
                                },
                                {
                                    "name": "lastName",
                                    "type": "String",
                                    "value": "Smith"
                                },
                                {
                                    "name": "mail",
                                    "type": "String",
                                    "value": "john.smith@mail.com"
                                },
                                {
                                    "name": "mail",
                                    "type": "String",
                                    "value": "john.smith@mail.com"
                                }
                            ]
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "MAFSEC01": {
                "openIdConnectUrl": "https://example.com/api/oauth/dialog",
                "type": "openIdConnect",
                "description": "MAF - SECURITY SCHEMA 01"
            }
        }
    },
    "tags": [
        {
            "name": "BCI Miami",
            "description": "Business ClientClient"
        },
        {
            "name": "Personal Acoounts ",
            "description": "Business Domain"
        }
    ]
}